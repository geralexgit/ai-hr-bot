# AI HR Bot Environment Configuration
# Copy this file to .env and fill in your actual values
# 
# Quick setup:
# 1. cp env.example .env
# 2. Get your Telegram bot token from @BotFather
# 3. Set TELEGRAM_BOT_TOKEN below
# 4. For Docker: uncomment Docker-specific settings
# 5. For local dev: run ./setup-database.sh to configure PostgreSQL

# =============================================================================
# TELEGRAM BOT CONFIGURATION
# =============================================================================
# Get your bot token from @BotFather on Telegram
TELEGRAM_BOT_TOKEN=your_telegram_bot_token_here

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL database settings
DB_HOST=localhost
DB_PORT=5432
DB_NAME=hr_bot
DB_USER=hr_user
DB_PASSWORD=hr_password
DB_SSL=false
DB_MAX_CONNECTIONS=20
DB_IDLE_TIMEOUT=30000
DB_CONNECTION_TIMEOUT=5000

# =============================================================================
# OLLAMA CONFIGURATION
# =============================================================================
# Ollama API settings for LLM integration
OLLAMA_BASE_URL=http://localhost:11434
OLLAMA_MODEL=gemma3n:latest

# =============================================================================
# PERPLEXITY API CONFIGURATION
# =============================================================================
# Perplexity API settings for AI-powered analysis
PERPLEXITY_API_KEY=your_perplexity_api_key_here
PERPLEXITY_MODEL=sonar-pro

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
# API Server settings
PORT=3000
NODE_ENV=development
LOG_LEVEL=info

# Frontend port (for development)
FRONTEND_PORT=3001
API_PORT=3000

# =============================================================================
# DOMAIN CONFIGURATION
# =============================================================================
# Your custom domain or IP address (change this to your actual domain/IP)
# For local development, use localhost
# For production, use your actual domain (e.g., your-domain.com) or IP address
APP_DOMAIN=localhost
APP_PROTOCOL=http

# =============================================================================
# CORS CONFIGURATION
# =============================================================================
# Allowed origins for CORS (development)
CORS_ORIGIN_DEV=http://localhost:5173,http://localhost:3001,http://localhost:3000

# Allowed origins for CORS (production)
# This will be automatically configured based on APP_DOMAIN and APP_PROTOCOL
# You can also manually set this to your specific domain
CORS_ORIGIN_PROD=http://localhost

# Allow external API calls from any origin (set to 'true' for less restrictive CORS)
# WARNING: Setting this to 'true' allows any domain to make requests to your API
# Only use this if you need to allow external integrations and understand the security implications
CORS_ALLOW_EXTERNAL_API=false

# =============================================================================
# DOCKER-SPECIFIC CONFIGURATION
# =============================================================================
# These settings are used when running with Docker Compose

# Database settings for Docker
# DB_HOST=database  # Uncomment for Docker Compose
# OLLAMA_BASE_URL=http://host.docker.internal:11434  # For Docker on Windows/Mac
# OLLAMA_BASE_URL=http://ollama:11434  # If running Ollama in Docker

# =============================================================================
# OPTIONAL CONFIGURATION
# =============================================================================
# Audio processing settings (if implementing voice messages)
# GOOGLE_CLOUD_PROJECT_ID=your_project_id
# GOOGLE_APPLICATION_CREDENTIALS=path/to/service-account.json

# File upload settings
# MAX_FILE_SIZE=10mb
# UPLOAD_PATH=./uploads

# Session settings
# SESSION_SECRET=your_session_secret_here
# SESSION_TIMEOUT=3600000

# Rate limiting
# RATE_LIMIT_WINDOW_MS=900000
# RATE_LIMIT_MAX_REQUESTS=100
